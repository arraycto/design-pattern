
定义: 允许一个对象在其内部状态改变时，改变它的行为；

    #举例：
         1.

    #类型：行为型

    #适用场景：
         1.一个状态存在多个状态（不同状态下行为不同），且状态可以相互转换;
         2.

    #注意事项：

    #优点： 1.将不同的状态隔离；
            2.把各个状态的转换逻辑，分布到state的子类中，减少相互的依赖
           3.增加新的状态非常简单；

    #缺点：1.状态多的业务场景导致类数目增加，系统变复杂;

    #相关设计模式：
        1.享元模式和状态模式：常常配合使用


    #源码扩展：
     1.

