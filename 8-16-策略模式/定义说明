
定义: 定义了算法家族，分别封装起来，让他们之间可以互相替换，此模式让算法的变化不会影响到使用算法的用户;

    #举例：
         1.田忌赛马，怎样去赛马，这些就是策略
         2.促销，满减立减，怎样减免，也是策略
         3.比如大量的if...else，使用策略模式可以消除掉

    #类型：行为型

    #适用场景：
              1. 系统有很多类，而他们的区别仅仅在于他们的行为不同，每个行为对应一中策略;
              2.一个系统需要动态地在几种算法（策略）中选择一种；

    #注意事项：

    #优点： 1.符合开闭原则；
            2.避免使用多重条件转移语句如if...else && switch...
            3.提高算法的保密性和安全性


    #缺点：1.客户端必须知道所有的策略类，并自行决定使用哪一个策略类;
          2. 产生很多的策略类；

    #扩展：
        2.策略模式和工厂模式：工厂模式是创建型的，策略模式是行为型的，工厂模式接受指定，创建出符合要求的工厂对象。而策略模式接受已经创建好的对象，从而实现不同的行为。
        3.策略模式和状态模式：使用状态模式的时候，客户端是不关心使用的哪个状态的，如lol有buffer的时候，拥有不同的行为，如灼烧效果，回血效果。

    #源码扩展：
     1. jdk源码中的comparator比较器


