
定义: 封装作用于某数据结构（如List/Set/Map等）中的各数据元素的操作；
      可以在不改变各元素的类的前提下，定义作用于这些元素的操作。

    #举例：
         1.

    #类型：行为型

    #适用场景：
         1.一个数据结构如（List/Set/Map等）包含很多类型对象;
         2.数据结构与数据操作分离；

    #注意事项：

    #优点： 1.增加新的操作很容易，即增加一个新的访问者；


    #缺点：1.增加新的数据结构困难;
           2.具体元素变更比较麻烦（增加元素里面的熟悉，或删除元素的属性）；

    #相关设计模式：
        1.迭代器模式和访问者模式：共同点:都是在某种数据结构上（List/Set/Map等）进行处理     访问者模式：主要用于对保存至数据结构中的元素进行”某种特殊“处理
                迭代器模式：主要是用于逐个遍历保存在数据结构中的一些元素（重点在遍历）


    #源码扩展：（使用场景较少）
     1.java.nio.FileVisitor

