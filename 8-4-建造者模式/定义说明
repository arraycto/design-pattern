
定义: 将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。（用户只需指定需要建造的类型就可以得到他们，建造过程以及细节不需要知道。）

    #类型：创建型
    #适用场景：
              1.如果一个对象有非常复杂的内部结构（很多属性）。
              2.想把复杂对象的创建和使用分离。
    #注意事项：

    #优点：1.封装性好，创建和使用分离
           2.扩展性好，"建造类"之间独立，一定程度上解耦。

    #缺点：1.产生多余的Builder对象；
          2.产品内部发生变化，建造者都要修改，成本较大。

    区别：1.和工厂模式比较类似，但是建造者模式更注重方法的调用顺序，而工厂模式注重创建产品；
         2.创建力度不同：建造者模式可以创建一些复杂的产品，由各种复杂的部件组成，而工厂模式创建出来的都是一个样子的产品。
         3.关注点：工厂模式注重只要把这个对象创建出来就ok，而建造者模式不仅要创建出这个产品，还要知道这个产品由哪些部件组成。
    举例：