
定义: 为了解释一种语言，而为语言创建的解释器;

    #举例：
         1.C#，java代码需要编译器编译，编译器就相当于解释器
         2.促销，满减立减，怎样减免，也是策略
         3.比如大量的if...else，使用策略模式可以消除掉

    #类型：行为型

    #适用场景：
              1. 在某个特定类型的问题发生频率较高的时候;
              2.一般使用开源工具包，dom4j，w3c等；

    #注意事项：

    #优点： 1.语法有很多类表示，容易改变以及扩展语言；


    #缺点：1.当语法规则数目增加太多时，增加了系统的复杂度（每个规则都要写一个类，增加了复杂度）;

    #扩展：
        2.解释器模式和适配模式：适配器模式是不需要预先知道要适配的规则。

    #源码扩展：
     1. jdk源码中的正则表达式类Pattern
     2. spring中的ExpressionParser类

